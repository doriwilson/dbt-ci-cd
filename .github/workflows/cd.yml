name: CD_action

on:
  push:
    branches: [ main ]

jobs:
  CD_job:
    runs-on: ubuntu-latest

    # ❄️ Snowflake credentials – add these as GitHub Secrets
    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}          # e.g. abc-xy123
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}        # or use key-pair (see notes below)
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      MANIFEST_ARTIFACT_NAME: dbt-manifest
      DBT_TARGET: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (dbt-snowflake)
        # Ensure your dbt-requirements.txt includes: dbt-snowflake==1.8.*
        run: pip install -r dbt-requirements.txt

      # ---- State handling (manifest.json) via artifacts ----
      - name: Download latest dbt-manifest artifact
        shell: bash
        run: |
          echo "Fetching artifact list..."
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/actions/artifacts \
               -o artifacts.json

          # Extract the latest artifact ID with name "dbt-manifest" using grep and sed
          artifact_id=$(cat artifacts.json \
            | awk '/"name": "dbt-manifest"/{getline; getline; print}' \
            | grep '"id":' \
            | sed 's/[^0-9]*\([0-9]*\).*/\1/' \
            | head -n1)

          if [ -z "$artifact_id" ]; then
            echo "❌ No artifact named 'dbt-manifest' found."
            exit 1
          fi

          echo "✅ Found artifact ID: $artifact_id"
          echo "Downloading artifact zip..."

          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip \
               -o artifact.zip

          unzip artifact.zip -d state
          echo "✅ Artifact extracted to ./state/"
          ls -lh state

      - name: Use state manifest if present
        run: |
          if [ -f "./state/manifest.json" ]; then
            cp ./state/manifest.json ./manifest.json
            echo "Found previous manifest.json; using state:modified+"
          else
            echo "No previous manifest.json found; running full build"
          fi

      # ---- dbt steps ----
      - name: dbt debug
        run: dbt debug --target $DBT_TARGET

      - name: dbt deps
        run: dbt deps --target $DBT_TARGET

      - name: dbt build (stateful when possible)
        run: |
          if [ -f "./manifest.json" ]; then
            dbt build -s 'state:modified+' --state ./state --target $DBT_TARGET
          else
            dbt build --target $DBT_TARGET
          fi

      - name: Upload new manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MANIFEST_ARTIFACT_NAME }}
          path: ./target/manifest.json
          if-no-files-found: error
          retention-days: 90
