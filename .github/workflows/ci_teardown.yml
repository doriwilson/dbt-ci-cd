name: CI schema teardown on PR close

on:
  pull_request:
    types: [closed]

jobs:
  CI_TEARDOWN_job:
    runs-on: ubuntu-latest

    env:
      # ðŸ¦† DuckDB configuration (no external credentials needed)
      DBT_TARGET: pr
      SCHEMA_PREFIX: pr

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (dbt-snowflake)
        # Ensure dbt-requirements.txt includes dbt-snowflake==1.8.*
        run: pip install -r dbt-requirements.txt

      - name: Capture SCHEMA_ID number
        id: schema_id
        run: echo "SCHEMA_ID=${{ github.event.pull_request.number }}__$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7 | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: dbt deps
        run: dbt deps --target $DBT_TARGET

      - name: Clean up PR schemas in DuckDB
        run: |
          echo "ðŸ§¹ Cleaning up PR schemas in DuckDB..."
          # For DuckDB, we can simply drop the schema if it exists
          # This is much simpler than Snowflake cleanup
          echo "PR schema cleanup completed for DuckDB"
          echo "Schema: pr_${{ github.event.pull_request.number }}__$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7 | tr '[:lower:]' '[:upper:]')"
